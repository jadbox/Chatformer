# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen   81; ## listen for ipv4; this line is default and implied
	listen   82;
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

	#root /usr/share/nginx/www;
	root /home/jdunlap/chatformer/public;
	index index.html;

	# Make site accessible from http://localhost/
	server_name _;

	location / {
		proxy_redirect off;
                #proxy_set_header HTTP_X_FORWARD_FOR $remote_addr;
                #proxy_set_header X-Forwarded-For $remote_addr;
		#proxy_set_header HTTP_X_FORWARD_FOR $proxy_add_x_forwarded_for;
		#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;		
		#proxy_redirect off;
                #proxy_set_header X-Real-IP $remote_addr;
                #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                #proxy_set_header CLIENT_IP $remote_addr;

	        #add_header Access-Control-Allow-Origin *;
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		try_files $uri $uri/ /index.html;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	}

	location /api {
		include uwsgi_params;
		proxy_redirect off;
		#proxy_set_header HTTP_X_FORWARD_FOR $remote_addr;
		#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		#proxy_set_header X-Real-IP $remote_addr;
		#uwsgi_param X-Real-IP $remote_addr;
		#uwsgi_param HTTP_X_FORWARD_FOR $remote_addr;
		#uwsgi_param X-Forwarded-Proto https;
		#uwsgi_param X-Real-IP $remote_addr;
		#uwsgi_param X-Forward-For $proxy_add_x_forwarded_for;
		uwsgi_param Host $http_host;
		uwsgi_pass 127.0.0.1:3031;
	}

	#location /auth {
	#	try_files $uri.html $uri/ =404;
	#}

	location /talk {
		 try_files $uri.html $uri/ =404;
	}

	#location /doc/ {
#		alias /usr/share/doc/;
#		autoindex on;
#		allow 127.0.0.1;
#		deny all;
#	}

	# Only for nginx-naxsi : process denied requests
	#location /RequestDenied {
		# For example, return an error code
		#return 418;
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}
